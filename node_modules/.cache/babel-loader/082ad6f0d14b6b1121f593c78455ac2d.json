{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migle\\\\OneDrive\\\\Desktop\\\\memeGenerator\\\\meme-generator\\\\src\\\\components\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport memesData from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input() {\n  _s();\n\n  const [meme, func] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemeImages, setMemes] = React.useState([]);\n  console.log(allMemeImages);\n\n  function getMemeImage() {\n    const memesArray = allMemeImages;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    const img = memesArray[randomNumber].url;\n    func(prevState => ({ ...prevState,\n      randomImage: img\n    }));\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    func(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }\n\n  React.useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes').then(response => response.json()).then(data => setMemes(data.data.memes));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form--input\",\n        placeholder: \"Top text\",\n        type: \"text\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form--input\",\n        placeholder: \"Bottom text\",\n        type: \"text\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMemeImage,\n        className: \"form--button\",\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"meme--img\",\n        src: meme.randomImage,\n        alt: \"meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Input, \"ORd8Kiua4VlcoePVAp35SBDyhx8=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/migle/OneDrive/Desktop/memeGenerator/meme-generator/src/components/Input.js"],"names":["React","memesData","Input","meme","func","useState","topText","bottomText","randomImage","allMemeImages","setMemes","console","log","getMemeImage","memesArray","randomNumber","Math","floor","random","length","img","url","prevState","handleChange","event","name","value","target","useEffect","fetch","then","response","json","data","memes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport memesData from \"../memesData\";\r\n\r\nexport default function Input () {\r\n    const [meme, func] = React.useState({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImage: \"http://i.imgflip.com/1bij.jpg\"\r\n    })\r\n   \r\n    \r\n    const [allMemeImages, setMemes] = React.useState([])\r\n    console.log(allMemeImages)\r\n    function getMemeImage() {\r\n        const memesArray = allMemeImages\r\n        const randomNumber = Math.floor(Math.random() * memesArray.length)\r\n        const img = memesArray[randomNumber].url\r\n        func(prevState => ({\r\n            ...prevState,\r\n            randomImage: img\r\n        })\r\n\r\n        )\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const {name, value} = event.target\r\n        func(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n   \r\n    React.useEffect(() => {\r\n        fetch('https://api.imgflip.com/get_memes')\r\n        .then(response => response.json())\r\n        .then(data => setMemes(data.data.memes));\r\n    }, [])\r\n    \r\n    return (\r\n        <main>\r\n        <div className=\"form\">\r\n            <input \r\n                className=\"form--input\" \r\n                placeholder=\"Top text\" \r\n                type=\"text\"\r\n                name=\"topText\"\r\n                value={meme.topText}\r\n                onChange={handleChange}\r\n                />\r\n            <input \r\n                className=\"form--input\" \r\n                placeholder=\"Bottom text\" \r\n                type=\"text\"\r\n                name=\"bottomText\"\r\n                value={meme.bottomText}  \r\n                onChange={handleChange}  \r\n                />\r\n            <button onClick={getMemeImage} className=\"form--button\">Get a new meme image</button>\r\n        </div>\r\n        <div className=\"meme\">\r\n        <img className=\"meme--img\" src={meme.randomImage} alt=\"meme image\" />\r\n            <h2 className=\"meme--text top\">{meme.topText}</h2>\r\n            <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\r\n        </div>\r\n        </main>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}